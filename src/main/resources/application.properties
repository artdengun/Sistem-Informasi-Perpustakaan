spring.datasource.url=jdbc:postgresql://localhost:5432/perpus
spring.datasource.username=secretperpus
spring.datasource.password=secretpassword
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto = validate 
spring.jpa.show-sql=true
spring.jpa.hibernate.use-new-id-generator-mappings=false

spring.thymeleaf.mode=HTML
spring.thymeleaf.cache=false

spring.jpa.open-in-view=false

# Hikari will use the above plus the following to setup connection pooling
## Hikari Connection Pool Configuration ------ For detailed configuration, please visit: https://github.com/brettwooldridge/HikariCP
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
## Minimum number of idle connections
spring.datasource.hikari.minimum-idle=5
## Connection pool maximum number of connections
spring.datasource.hikari.maximum-pool-size=15
## Maximum time for idle connection to live, default 600,000 (10 minutes)
spring.datasource.hikari.idle-timeout=180000
## This property controls the default auto-commit behavior for connections returned from the pool. Default: true
spring.datasource.hikari.auto-commit=true
## Connecting pool mother and child
spring.datasource.hikari.pool-name=MyHikariCP
## This attribute controls the longest life cycle of the connection in the pool. A value of 0 means an infinite life cycle. The default is 1800000 or 30 minutes.
spring.datasource.hikari.max-lifetime=1800000
# Configure the interval to detect once, and detect the idle connection that needs to be closed. The unit is milliseconds.
spring.datasource.time-between-eviction-runs-millis=18800
## Database connection timeout, default 30 seconds, ie 30000
spring.datasource.hikari.connection-timeout=30000
